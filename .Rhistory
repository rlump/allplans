remove(t,x)
ls()
View(ddd)
remove(ddd)
ls()
ccc
ls()
source('~/RailApps/allplans/processWB.R')
processWB(hhsdata,plans)
mtcars
by(mtcars,c(mtchars$cyl),function(x) {x})
by(mtcars,c(mtcars$cyl),function(x) {x})
by(mtcars,c(mtcars$cyl,mtcars$gear),function(x) {x})
agregate(mtcars,c(mtcars$cyl,mtcars$gear),function(x) {x})
aggregate(mtcars,c(mtcars$cyl,mtcars$gear),function(x) {x})
ls
ls()
by(mtcars,c(mtcars$cyl,mtcars$gear),function(x) {x})
by(mtcars,list(mtcars$cyl,mtcars$gear),function(x) {x})
by(mtcars,list(mtcars$cyl,mtcars$gear),function(x) {x}) -> ttt
unsplit(ttt)
unsplit(ttt,list(5,8))
split(mtcars,list(mtcars$cyl,mtcars$gear)) -> ttt
ttt
unsplit(ttt,list(5,8))
split(mtcars,list(mtcars$cyl,mtcars$gear)) -> ttt
unsplit(ttt,list(mtcars$cyl,mtcars$gear))
by(mtcars,list(mtcars$cyl,mtcars$gear),function(x) {x}) -> ttt
unsplit(ttt,list(mtcars$cyl,mtcars$gear))
split(mtcars,list(mtcars$cyl,mtcars$gear)) -> ttt
ttt
by(mtcars,list(mtcars$cyl,mtcars$gear),function(x) {x}) -> ttt
ttt
split(mtcars,list(mtcars$cyl,mtcars$gear)) -> ttt
ttt
by(mtcars,list(mtcars$cyl,mtcars$gear),function(x) {x},simplify = FALSE) -> ttt
ttt
unsplit(ttt,list(mtcars$cyl,mtcars$gear))
ttt
class(ttt)
str(ttt)
as.data.frame(ttt)
ttt
lapply(ttt,function(x){x})
do.call(rbind, ttt)
lapply(ttt,rbind)
do.call(rbind, ttt)
lapply(ttt,rbind)
rbind(ttt)
do.call(rbind, ttt)
class(do.call(rbind, ttt))
ttt
View(counties)
processCounties(counties)
table(plans$state)
table(plans$State)
mtcars
table(mtcars$cyl)
table(mtcars$cyl,mtcars$am)
table(mtcars$cyl,mtcars$am,mtcars$gear)
x <- cbind(x1 = 3, x2 = c(4:1, 2:5))
x
colSums(x)
search()
datasets::
datasets
UCBAdmissions
warpbreaks
UCBAdmissions
UCBAdmissions
as.data.frame(UCBAdmissions)
rep(1:9)
rep(1:9,len=54)
warpbreaks
UCBAdmissions
lm
density
plot(density(c(-20, rep(0,98), 20)), xlim = c(-4, 4))
rep(0,98)
ls()
ls()
counties[counties[,6] == "North Carolina",][,6]
counties[counties[,6] == "Illinois",][,6]
plans[1:10]
plans[1:10,]
lapply(statePlans,function(x) {x[order(x$Premium.Adult.Individual.Age.21),]} )[["IL"]] -> ilcheap
ilcheap[1:100,]
stateCarrier
stateCarrier
stateCarriers
stateCarriers["TX"]
stateCarriers["OH"]
lapply(statePlans,function(x) {x[order(x$Premium.Adult.Individual.Age.21),]} )[["TX"]] -> txcheap
txcheap
txcheap
txcheap[1:100,]
txcheap[1:100,]
txcheap[1:100,]
txcheap[1:100,]
txcheap[txcheap$Metal.Level != Catastrophic,]
txcheap[txcheap$Metal.Level != "Catastrophic",]
txcheap[txcheap$Metal.Level != "Catastrophic",][1:300,]
txcheap[txcheap$Metal.Level != "Catastrophic",][1:300,]
txcheap[txcheap$Metal.Level != "Catastrophic",][1:400,]
stateCarriers["OH"]
lapply(statePlans,function(x) {x[order(x$Premium.Adult.Individual.Age.21),]} )[["IL"]] -> ilcheap
hist(ilcheap)
hist(ilcheap)
ilcheap
head ilcheap
head(ilcheap)
Z <- stats::rnorm(10000)
Z
table(cut(Z, breaks = -6:6))
table(cut(Z, breaks = -6:6)) -> ccc
hist(ccc)
ccc[1]
ccc[4]
density(ccc)
head(ilcheap)
head(ilcheap)
ilcheap(,4)
ilcheap[,4]
ilcheap[,5]
quantile(ilcheap[,5])
cut(ilcheap,quantile(ilcheap[,5]))
cut(ilcheap[,5],quantile(ilcheap[,5]))
quantile(ilcheap[,5])
ilcheap[which(icheap$Metal.Level=="Bronze")]
ilcheap[which(icheap$Metal.Level==Bronze)]
head(ilcheap)
ilcheap[which(ilcheap$Metal.Level==Bronze)]
ilcheap$Metal.Leve
ilcheap[which(ilcheap$Metal.Level=="Bronze")]
ilcheap[which(ilcheap$Metal.Level=="Bronze"),]
ilcheap[which(ilcheap$Metal.Level=="Bronze"),5]
quantile(ilcheap[which(ilcheap$Metal.Level=="Bronze"),5])
quantile(ilcheap[which(ilcheap$Metal.Level=="Bronze"&ilcheap$County=="Cook"),5])
head(ilcheap)
!he
quantile(ilcheap[which(ilcheap$Metal.Level=="Bronze"&ilcheap$County=="COOK"),5])
quantile(ilcheap[which(ilcheap$Metal.Level=="Bronze"&ilcheap$County=="COOK"),5])[1]
quantile(ilcheap[which(ilcheap$Metal.Level=="Bronze"&ilcheap$County=="COOK"),5])[2]
quantile(ilcheap[which(ilcheap$Metal.Level=="Bronze"&ilcheap$County=="COOK"),5])[2]
quantile(ilcheap[which(ilcheap$Metal.Level=="Bronze"&ilcheap$County=="COOK"),5])[2] -> bottom
ilcheap[which(ilcheap$Metal.Level=="Bronze" & ilcheap$Premium.Adult.Individual.Age.21 < bottom),]
ilcheap[which(ilcheap$Metal.Level=="Bronze" & ilcheap$Premium.Adult.Individual.Age.21 < bottom),ilcheap$Issuer.Name]
ilcheap[which(ilcheap$Metal.Level=="Bronze" & ilcheap$Premium.Adult.Individual.Age.21 < bottom),]
ilcheap[which(ilcheap$Metal.Level=="Bronze" & ilcheap$Premium.Adult.Individual.Age.21 < bottom),4]
ilcheap[which(ilcheap$Metal.Level=="Bronze" & ilcheap$Premium.Adult.Individual.Age.21 < bottom),ilcheap$Issuer.Name]
ilcheap[which(ilcheap$Metal.Level=="Bronze" & ilcheap$Premium.Adult.Individual.Age.21 < bottom),4]
ilcheap[which(ilcheap$Metal.Level=="Bronze" & ilcheap$Premium.Adult.Individual.Age.21 < bottom),ilcheap$Issuer.Name]
ilcheap[which(ilcheap$Metal.Level=="Bronze" & ilcheap$Premium.Adult.Individual.Age.21 < bottom),4]
ilcheap[which(ilcheap[1,]=="Bronze" & ilcheap$Premium.Adult.Individual.Age.21 < bottom),4]
ilcheap[which(ilcheap[,2]=="Bronze" & ilcheap$Premium.Adult.Individual.Age.21 < bottom),4]
ilcheap[which(ilcheap[,3]=="Bronze" & ilcheap$Premium.Adult.Individual.Age.21 < bottom),4]
names(ilcheap)
ilcheap[which(ilcheap[,3]=="Bronze" & ilcheap[,2]=="COOK" & ilcheap$Premium.Adult.Individual.Age.21 < bottom),4]
quantile(ilcheap[which(ilcheap$Metal.Level=="Bronze"&ilcheap$County=="COOK"),5])[2] -> bottom
ilcheap[which(ilcheap$Metal.Level=="Bronze"&ilcheap$County=="COOK")
]
ilcheap[which(ilcheap$Metal.Level=="Bronze"&ilcheap$County=="COOK"),]
statePlans[["AK"]]
processCounties(counties)
by(mtcars,list(mtcars$cyl,mtcars$gear),function(x) {x},simplify = FALSE) -> ttt
ttt
by(mtcars,mtcars$cyl,function(x){x})
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()
source('~/RailApps/allplans/processCountyPlans.R')
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()
quantile(ilcheap[which(ilcheap$Metal.Level=="Bronze"&ilcheap$County=="COOK"),5])[2] -> bottom
lapply(statePlans,function(x) {x[order(x$Premium.Adult.Individual.Age.21),]} )[["IL"]] -> ilcheap
quantile(ilcheap[which(ilcheap$Metal.Level=="Bronze"&ilcheap$County=="COOK"),5])[2] -> bottom
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()
quantile(ilcheap[which(ilcheap$Metal.Level=="Bronze"&ilcheap$County=="COOK"),5])[2] -> bottom
bottom
quantile(ilcheap[which(ilcheap$Metal.Level=="Bronze"&ilcheap$County=="COOK"),5])[2] -> bottom
bottom
quantile(ilcheap[which(ilcheap$Metal.Level=="Bronze"&ilcheap$County=="COOK"),5])[2] -> bottom
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()
statePlans[["IL"]]
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()
summaryStatePlans[["IL"]
]
summaryStatePlans()[["IL"]]
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()[["IL"]]
summaryStatePlans()
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()
source('~/RailApps/allplans/processCountyPlans.R')
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()
source('~/RailApps/allplans/processCountyPlans.R')
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()
summaryStatePlans()["IL"]
summaryStatePlans()["TX"]
summaryStatePlans()["TX"]
source('~/RailApps/allplans/processCountyPlans.R')
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()["TX"]
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()["TX"]
source('~/RailApps/allplans/processCountyPlans.R')
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()["TX"]
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()["TX"]
summaryStatePlans()["OH"]
summaryStatePlans()["OH"]
summaryStatePlans()["OH"]
source('~/RailApps/allplans/processCountyPlans.R')
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()["OH"]
summaryStatePlans()["WY"]
sapply(as.character(hhsdframe[,"stateabb"]),function(x) {length(stateCarriers[[x]])} ) -> stateCarrierNums
stateCarrierNums
stateCarrierNums
stateCarrierNums
source('~/RailApps/allplans/processCountyPlans.R')
source('~/RailApps/allplans/processCountyPlans.R')
stateCarrierNums
summaryStatePlans()["WY"]
names(plans)
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()["WY"]
source('~/RailApps/allplans/processCountyPlans.R')
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()["WY"]
summaryStatePlans()["OH"]
summaryStatePlans()["OH"]
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()["OH"]
summaryStatePlans()["OH"]
summaryStatePlans()["OH"]
summaryStatePlans()["IL"]
summaryStatePlans()["WY"]
summaryStatePlans()["WY"]
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()["WY"]
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()["WY"]
summaryStatePlans()["WY"]
source('~/RailApps/allplans/processCountyPlans.R')
source('~/RailApps/allplans/processCountyPlans.R')
source('~/RailApps/allplans/processCountyPlans.R')
names(plans)
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()["WY"]
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()["WY"]
source('~/RailApps/allplans/processCountyPlans.R')
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()["WY"]
source('~/RailApps/allplans/processCountyPlans.R')
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()["WY"]
source('~/RailApps/allplans/processCountyPlans.R')
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()["WY"]
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()["WY"]
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()["WY"]
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()["WY"]
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()["WY"]
source('~/RailApps/allplans/processCountyPlans.R')
source('~/RailApps/allplans/processCountyPlans.R')
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()["WY"]
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()["WY"]
source('~/RailApps/allplans/processCountyPlans.R')
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()["WY"]
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()["WY"]
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()["WY"]
source('~/RailApps/allplans/processCountyPlans.R')
source('~/RailApps/allplans/processCountyPlans.R')
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()["WY"]
nmae(plans)
names(plans)
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()["WY"]
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()["WY"]
summaryStatePlans()["IL"]
summaryStatePlans()["OH"]
summaryStatePlans()["OH"]
summaryStatePlans()["TX"]
summaryStatePlans()["WI"]
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()["WI"]
summaryStatePlans()["WI"]
processCounties(counties)
processCounties(counties) -> populousCounties
populousCounties
populousCounties
source('~/RailApps/allplans/processCountyPlans.R')
statePlans
nmaes(plans)
names(plans)
populousCounties[["IL"]]
populousCounties[[plans[1,plans$State]]]
plans[1,plans$State]
plans[1,"State"]
populousCounties[[plans[1,"State"]]]
populousCounties[[plans[1,"State"]]] -> AKpop
plans[1,]
plans[1,20]
plans[1,40]
plans[1,30]
plans[1,20]
plans[30,20]
plans[30,]
plans[60,]
plans[1000,]
plans[100,]
charmatch(plans[100,2],)
AKpop
charmatch(plans[100,2],AKpop$CTYNAME)
charmatch(plans[10,2],AKpop$CTYNAME)
AKpop$CTYNAME
charmatch("MAT",AKpop$CTYNAME)
charmatch("B",AKpop$CTYNAME)
charmatch("BAN",AKpop$CTYNAME)
statePlans
summaryStatePlans()
charmatch("BAN",AKpop$CTYNAME)
charmatch(plans[10,2],AKpop$CTYNAME)
source('~/RailApps/allplans/processCountyPlans.R')
populousCounties[[plans[1,"State"]]] -> AKpop
source('~/RailApps/allplans/processCountyPlans.R')
charmatch(plans[10,2],AKpop$CTYNAME)
source('~/RailApps/allplans/processCountyPlans.R')
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()
populousCounties[["WY"]]
summaryStatePlans()[["WY"]]
populousCounties[["WY"]]
summaryStatePlans()->lll
lll[["OH"]]
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()->lll
processCounties(counties) -> allCounties
summaryStatePlans()->lll
processWB(hhsdata,plans) ->stateSummary
summaryStatePlans()->lll
plans[1,]
plans <- read.csv("out",colClasses = "character")
plans[1,]
nrow(plans)
plans <- plans[complete.cases(plans),]
nrow(plans)
summaryStatePlans()->lll
plans[1,4]
plans[1,5]
plans[,5] <- as.numeric(plans[,5])
plans[1,5]
summaryStatePlans()->lll
lll[["OH"]]
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()->lll
lll[["OH"]]
plans <- plans[complete.cases(plans),]
nrow(plans)
complete.cases(plans)
complete.cases(plans) == FALSE
plans[1,5]
summaryStatePlans()->lll
lll[["OH"]]
source('~/RailApps/allplans/processCountyPlans.R')
lll[["OH"]]
source('~/RailApps/allplans/processCountyPlans.R')
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()->lll
lll[["OH"]]
View(stateSummary)
source('~/RailApps/allplans/processCountyPlans.R')
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()->lll
lll[["OH"]]
allCounties
counties
processCounties(counties) -> allCounties
allCounties
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> allCounties
allCounties
summaryStatePlans()->lll
lll[["OH"]]
allCounties
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()->lll
lll[["OH"]]
plans[1,]
allCounties[[plans[1,"State"]]]
allCounties[[plans[1,"State"]]] -> ak
ak
View(stateSummary)
statePops <- read.csv("./statepop.csv")
statePops
stateSummary <- cbind(stateSummary,)
stateSummary <- cbind(stateSummary,statePops)
View(stateSummary)
summaryStatePlans()->lll
lll[["OH"]]
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()->lll
lll[["OH"]]
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()->lll
lll[["OH"]]
source('~/RailApps/allplans/processCountyPlans.R')
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()->lll
library(plyr)
summaryStatePlans()->lll
lll[lll$state=="OH",] -> ooo
View(ooo)
source('~/RailApps/allplans/processCountyPlans.R')
lll[lll$state=="OH",] -> ooo
summaryStatePlans()->lll
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()->lll
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()->lll
lll[lll$state=="OH",] -> ooo
View(ooo)
source('~/RailApps/allplans/processCountyPlans.R')
lll[lll$state=="OH",] -> ooo
summaryStatePlans()->lll
lll[lll$state=="OH",] -> ooo
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()->lll
View(ooo)
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()->lll
lll[lll$state=="OH",] -> ooo
View(ooo)
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()->lll
lll[lll$state=="OH",] -> ooo
View(ooo)
source('~/RailApps/allplans/processCountyPlans.R')
source('~/RailApps/allplans/processCountyPlans.R')
source('~/RailApps/allplans/processCountyPlans.R')
View(ooo)
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()->lll
lll[lll$state=="OH",] -> ooo
View(ooo)
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()->lll
summaryStatePlans()->lll
lll[lll$state=="OH",] -> ooo
View(ooo)
class(NA)
class(as.character(NA))
class(as.character(NA)) -> ttt
ttt
ttt <- NA
class(ttt)
as.character(ttt)
class(ttt)
ttt <- as.character(NA)
class(ttt)
ttt
source('~/RailApps/allplans/processCountyPlans.R')
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()->lll
lll[lll$state=="OH",] -> ooo
View(ooo)
eval(parse(text = paste0("tt","t"))
)
eval(parse(text = paste0("tt","t")))
View(ooo)
source('~/RailApps/allplans/processCountyPlans.R')
source('~/RailApps/allplans/processCountyPlans.R')
summaryStatePlans()->lll
View(ooo)

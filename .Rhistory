ilcheap[1:200,][,ilcheap$Metal.Level == "Bronze"]
ilcheap[,ilcheap$Metal.Level == "Bronze"]
ilcheap[ilcheap$Metal.Level == "Bronze",]
ilcheap[1:200,][ilcheap$Metal.Level == "Bronze",]
ilcheap[ilcheap$Metal.Level == "Bronze",]
ilcheap[1:200,] -> il200
il200[il200$Metal.Level == "Bronze",]
il200[il200[,3] == "Bronze",]
rle(sort(ilcheap[1:200,][,4]))
rle(sort(ilcheap[1:200,][,4])).lsngths
rle(sort(ilcheap[1:200,][,4])).lengths
rle(sort(ilcheap[1:200,][,4]))
rle(sort(ilcheap[1:200,][,4]))$lengths
which.max(rle(sort(ilcheap[1:200,][,4]))$lengths)
source('~/RailApps/allplans/processWB.R')
processWB(hhsdata,plans) -> ic
ic
identical(ilcheap,ic)
il200[il200$Metal.Level == "Bronze",]
il200[il200$Metal.Level == "Bronze",][1:10]
il200[il200$Metal.Level == "Bronze",][1:10,]
source('~/RailApps/allplans/processWB.R')
processWB(hhsdata,plans) -> ic
source('~/RailApps/allplans/processWB.R')
processWB(hhsdata,plans) -> ic
ic
source('~/RailApps/allplans/processWB.R')
source('~/RailApps/allplans/processWB.R')
processWB(hhsdata,plans) -> ic
ic
source('~/RailApps/allplans/processWB.R')
source('~/RailApps/allplans/processWB.R')
processWB(hhsdata,plans) -> ic
ic
source('~/RailApps/allplans/processWB.R')
processWB(hhsdata,plans)
source('~/RailApps/allplans/processWB.R')
source('~/RailApps/allplans/processWB.R')
source('~/RailApps/allplans/processWB.R')
processWB(hhsdata,plans)
source('~/RailApps/allplans/processWB.R')
processWB(hhsdata,plans)
processWB(hhsdata,plans) [1:400]
processWB(hhsdata,plans) [1:400,]
source('~/RailApps/allplans/processWB.R')
source('~/RailApps/allplans/processWB.R')
processWB(hhsdata,plans) [1:400,]
source('~/RailApps/allplans/processWB.R')
processWB(hhsdata,plans) [1:400,]
processWB(hhsdata,plans) [400:800,]
source('~/RailApps/allplans/processWB.R')
processWB(hhsdata,plans) [1:400,]
processWB(hhsdata,plans) [1:400,]
source('~/RailApps/allplans/processWB.R')
processWB(hhsdata,plans) [1:400,]
source('~/RailApps/allplans/processWB.R')
processWB(hhsdata,plans) [1:400,]
source('~/RailApps/allplans/processWB.R')
processWB(hhsdata,plans) [1:400,]
source('~/RailApps/allplans/processWB.R')
source('~/RailApps/allplans/processWB.R')
processWB(hhsdata,plans) [1:400,]
source('~/RailApps/allplans/processWB.R')
processWB(hhsdata,plans) [1:400,]
source('~/RailApps/allplans/processWB.R')
processWB(hhsdata,plans) [1:400,]
source('~/RailApps/allplans/processWB.R')
processWB(hhsdata,plans) [1:400,]
source('~/RailApps/allplans/processWB.R')
processWB(hhsdata,plans) [1:400,]
source('~/RailApps/allplans/processWB.R')
processWB(hhsdata,plans) [1:400,]
source('~/RailApps/allplans/processWB.R')
processWB(hhsdata,plans) [1:400,]
source('~/RailApps/allplans/processWB.R')
processWB(hhsdata,plans) [1:400,]
source('~/RailApps/allplans/processWB.R')
processWB(hhsdata,plans) [1:400,]
source('~/RailApps/allplans/processWB.R')
processWB(hhsdata,plans) [1:400,]
source('~/RailApps/allplans/processWB.R')
source('~/RailApps/allplans/processWB.R')
processWB(hhsdata,plans) [1:400,]
source('~/RailApps/allplans/processWB.R')
processWB(hhsdata,plans) [1:400,]
counties <- read.csv("./CO-EST2013-Alldata.csv")
View(counties)
View(ilcheap)
View(counties)
View(hhsdata)
View(ic)
View(plans)
View(counties)
View(plans)
View(counties)
View(counties)
c("dog","cat") %in% c("dog","cat")
View(counties)
View(plans)
View(counties)
View(plans)
duplicated(c(1:10))
duplicated(c(1:10,1:10))
plans[1:10,]
plans[1:100,]
plans[1:100,c(1,2)
]
plans[1:100,c(1,2)]
plans[1:100,]
plans[1:100,c(1,2)]
plans[1:100,c(1,2)] -> ddd
ddd
ddd[!duplicated(ddd[,1])]
ddd[!duplicated(ddd[,1])]
!duplicated(ddd[,1])
ddd[!duplicated(ddd[,1]),]
ddd[!duplicated(ddd[,c(1,2)]),]
plans[1:100,]
ddd[!duplicated(ddd[,c(1,2)]),]
plans[!duplicated(plans[,c(1,2)]),]
plans[plans[,1] == "TX",]
plans[plans[,1] == "TX",][1:100]
plans[plans[,1] == "TX",][1:100,]
plans[!duplicated(plans[,c(1,2)]),]
View(counties)
toupper(counties$CTYNAME)
toupper(counties[counties$CTYNAME,])
q\
counties[counties$CTYNAME,]
counties[,7]
class(counties[,7])
toupper(as.character(counties[,7]))
as.acharacter(counties[,7]))
as.acharacter(counties[,7])
as.character(counties[,7])
toupper(as.character(counties[,7]))
toupper(as.character(counties[,7]))
toupper(c("dog")
)
toupper(as.character(counties[,7]))
gsub(/ County/,"",as.character(counties[,7]))
gsub(" County","",as.character(counties[,7]))
View(plans)
gsub(" County","",as.character(counties[,7])) -> ccc
ccc
capwords <- function(s, strict = FALSE) {
cap <- function(s) paste(toupper(substring(s, 1, 1)),
{s <- substring(s, 2); if(strict) tolower(s) else s},
sep = "", collapse = " " )
sapply(strsplit(s, split = " "), cap, USE.NAMES = !is.null(names(s)))
}
capwords
remove(ccc)
toupper(as.character(counties[,7]))
capwords(as.character(counties[,7]))
counties[1835]
counties[1835,]
View(plans)
plans[state == "NM",]
plans[plans$state == "NM",]
plans[1,]
plans[plans$State == "NM",]
plans[,plans$State == "NM"]
plans[plans$State == "NM",]
plans[plans$State == "IL",]
View(counties)
View(counties)
toupper(as.character(counties[,7]))
toupper(as.character(counties[1,7]))
toupper(as.character(counties[1,7]))
counties[-1835] -> ccc
toupper(as.character(ccc[,7]))
ccc[1835]
ccc[1835,]
ccc[1,]
counties[1,]
ccc[1835,]
counties[1835,7]
counties[1835:1836,7]
counties[1835:1836]
counties[1835:1836,]
counties[-1835] -> ccc
ccc[-1835]
ccc[1835,]
ccc[1835,]
counties[c(-1835)] -> ccc
ccc[1835,]
counties[-1835,] -> ccc
ccc[1835,]
source('~/RailApps/allplans/processCounties.R')
toupper(as.character(counties[,7]))
processCounties(counties) -> ccc
toupper(as.character(ccc[,7]))
toupper(as.character(counties[,7]))
ccc[,7]
ccc[1835,]
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
toupper(as.character(ccc[,7]))
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
ccc
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
ccc
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
ccc
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
ccc
View(ccc)
processCounties(counties) -> ccc
View(ccc)
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
View(ccc)
View(plans2)
identical(plans,plans2)
remoce(plans2)
remove(plans2)
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
View(ccc)
source('~/RailApps/allplans/processCounties.R')
View(ccc)
processCounties(counties) -> ccc
View(ccc)
source('~/RailApps/allplans/processCounties.R')
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
class(ccc[2])
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
as.character(ccc)
processCounties(counties) -> ccc
ccc
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
ccc
source('~/RailApps/allplans/processCounties.R')
counties
counties[,6]
View(ccc)
match(counties[,6],ccc[1,])
match(counties[,6],ccc[,1])
ccc[match(counties[,6],ccc[,1]),2]
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
View(ccc)
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
ccc[1,]
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
View(ccc)
source('~/RailApps/allplans/processCounties.R')
source('~/RailApps/allplans/processCounties.R')
source('~/RailApps/allplans/processCounties.R')
source('~/RailApps/allplans/processCounties.R')
source('~/RailApps/allplans/processCounties.R')
ccc[1,]
cccc <- ccc[ccc$STNAME != ccc$states,]
View(cccc)
cccc <- ccc[ccc$STNAME != ccc$states,]
View(cccc)
View(ccc)
ccc[ccc$STNAME != ccc$states,]
ccc[ccc$STNAME == "Alabama",]
class(ccc$STNAME)
class(ccc$states)
ccc[as.character(ccc$STNAME) != as.character(ccc$states),]
ccc[as.character(ccc$STNAME) != as.character(ccc$states),]
ccc[ccc$STNAME == ccc$states,]
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
processCounties(counties) -> ccc
ccc
ccc[ccc$STNAME != toupper(ccc$CTYNAME),]
ccc[ccc$STNAME != ccc$CTYNAME,]
ccc[ccc$STNAME == ccc$states,]
source('~/RailApps/allplans/processCounties.R')
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
ccc[ccc$STNAME != toupper(ccc$CTYNAME),]
ccc[ccc$STNAME != toupper(ccc$CTYNAME),] -> ccc
View(ccc)
ccc[toupper(ccc$STNAME) != ccc$CTYNAME,] -> ccc
ccc
View(ccc)
source('~/RailApps/allplans/processCounties.R')
source('~/RailApps/allplans/processCounties.R')
source('~/RailApps/allplans/processCounties.R')
ccc[toupper(ccc$STNAME) != ccc$CTYNAME,] -> ccc
View(ccc)
ccc$STNAME
source('~/RailApps/allplans/processCounties.R')
source('~/RailApps/allplans/processCounties.R')
source('~/RailApps/allplans/processCounties.R')
source('~/RailApps/allplans/processCounties.R')
ccc[toupper(ccc$STNAME) != ccc$CTYNAME,] -> ccc
source('~/RailApps/allplans/processCounties.R')
ccc[toupper(ccc$STNAME) != ccc$CTYNAME,] -> ccc
View(ccc)
source('~/RailApps/allplans/processCounties.R')
ccc[toupper(ccc$STNAME) != ccc$CTYNAME,] -> ccc
ccc[order(ccc$CENSUS2010POP),] -> ccc
View(ccc)
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
View(ccc)
source('~/RailApps/allplans/processCounties.R')
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
ccc["IL"]
ccc["IL"] ->il
ccc[["IL"]] ->il
View(il)
ccc[["WY"]] ->il
View(il)
ccc[["NE"]] ->il
View(il)
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
source('~/RailApps/allplans/processCounties.R')
source('~/RailApps/allplans/processCounties.R')''
source('~/RailApps/allplans/processCounties.R')''
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
source('~/RailApps/allplans/processCounties.R')
source('~/RailApps/allplans/processCounties.R')
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
ccc[1:10]
ccc[,1]
ccc[["IL"]]
ccc[["IL"]][,1]
ccc[["IL"]][,6]
ccc[["IL"]][,7]
ccc[["IL"]][,8]
ccc[["IL"]][,c(7,8)]
ccc[["IL"]][,c(ccc$STNAME)]
ccc[["IL"]][,c(7,8)]
ccc[["IL"]][1,c(7,8)]
ccc[["IL"]][,c(ccc$STNAME)]
ccc[["IL"]] -> cccc
cccc[1,7]
cccc[1,cccc$CTYNAME]
cccc[1,c(7,8)]
cccc[1,c(cccc$CTYNAME)]
cccc[1,c(7,8)]
cccc[1,cccc$CTYNAME]
cccc[,cccc$CTYNAME]
cccc[,]
cccc[,c(7,8)]
cccc[1,c(7,8)]
cccc[,ccc$CENSUS2010POP]
cccc[ccc$CENSUS2010POP,]
cccc[cccc$CENSUS2010POP,]
cccc[,cccc$CENSUS2010POP]
cccc[,cccc$CENSUS2010POP>100000]
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
ccc[["IL"]]
source('~/RailApps/allplans/processCounties.R')
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
processCounties(counties) -> ccc[["IL"]]
processCounties(counties) -> ccc
ccc[["IL"]]
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
ccc[["IL"]] -> cccc
View(cccc)
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
ccc[["IL"]] -> cccc
View(cccc)
source('~/RailApps/allplans/processCounties.R')
source('~/RailApps/allplans/processCounties.R')
ccc[["IL"]] -> cccc
View(cccc)
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
ccc[["IL"]] -> cccc
View(cccc)
source('~/RailApps/allplans/processCounties.R')
ccc[["IL"]] -> cccc
View(cccc)
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
ccc[["IL"]] -> cccc
ccc[["IL"]] -> cccc
processCounties(counties) -> ccc
ccc[["IL"]] -> cccc
View(cccc)
View(cccc)
source('~/RailApps/allplans/processCounties.R')
source('~/RailApps/allplans/processCounties.R')
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
ccc[["IL"]] -> cccc
View(cccc)
source('~/RailApps/allplans/processCounties.R')
ccc[["IL"]] -> cccc
View(cccc)
source('~/RailApps/allplans/processCounties.R')
ccc[["IL"]] -> cccc
ccc[["IL"]] -> cccc
View(cccc)
1:5
plans[1:5,]
plans[1:5,1]
source('~/RailApps/allplans/processCounties.R')
ccc[["IL"]] -> cccc
ccc[["IL"]] -> cccc
View(cccc)
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
ccc[["IL"]] -> cccc
View(cccc)
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
ccc[["IL"]] -> cccc
View(cccc)
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
ccc[["IL"]] -> cccc
View(cccc)
i <- 4
1:i
source('~/RailApps/allplans/processCounties.R')
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
i <- 3
i
i + 1
i <- i + 1
i + 1
i <- i + 1
i
i
i + 1
i + 1 -> i
i
i + 1 -> i
i
i <- i + 1
i
i <- i + 1
i
source('~/RailApps/allplans/processCounties.R')
processCounties(counties) -> ccc
ccc[["IL"]] -> cccc
View(cccc)
ccc[["WI"]] -> cccc
View(cccc)
ccc
counties[count.fields[,6] == "North Carolina",]
counties[counties[,6] == "North Carolina",]
counties[counties[,6] == "North Carolina",][,6]
counties[counties[,6] == "Illinois",][,6]
source('~/RailApps/allplans/processCounties.R')
source('~/RailApps/allplans/processCounties.R')
ccc[["IL"]] -> cccc
View(cccc)
processCounties(counties) -> ccc
ccc[["IL"]] -> cccc
View(cccc)
ccc
source('~/RailApps/allplans/processCounties.R')
ccc
plams[1.]
plans[1.]
plans[1,]
ccc[["AK"]]
plans[1,]
charmatch(1,)
ccc[["AK"]]
plans[1,]
plans[1:30,]
plans[1:100,]
plans[88,1]
plans[88,2]
plans[88:130,2]
plans[88:130,2]
charset(plans[88,2],ccc[[plans[88,1]]])
charmatch(plans[88,2],ccc[[plans[88,1]]])
ccc[[plans[88,1]]
]
ccc[[plans[88,1]]][,2]
charmatch(plans[88,2],ccc[[plans[88,1]][,2]])
ccc[[plans[88,1]]][,2]
charmatch(plans[88,2],ccc[[plans[88,1]]][,2])
